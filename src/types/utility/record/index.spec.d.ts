declare namespace Interface {
  export type Result = 0 | Test<{
    T: [
      Interface<{ a: 5 }>,
      Interface<{ a: 1; b?: 2 }>,
      Interface<{ a: 1; b: 2 }>,
      Interface<Record<"a", unknown>>,
      Interface<Record<"a" | "b", unknown>>,
    ];
    F: [
      Interface<null | { a: 5 }>,
      Interface<never>,
      Interface<object>,
      Interface<Record<"a" | "b" | 5, unknown>>,
      Interface<Record<"a" | "b" | number, unknown>>,
      Interface<Record<string, unknown>>,
      Interface<Record<string | number, unknown>>,
      Interface<Record<stringful, string>>,
      Interface<Record<stringful | "5", string>>,
      Interface<[]>,
      Interface<[1]>,
      Interface<[1, 1]>,
      Interface<number[]>,
      Interface<readonly []>,
      Interface<readonly [1]>,
      Interface<readonly [1, 1]>,
      Interface<readonly number[]>,
      Interface<() => void>,
      Interface<(a: string) => boolean>,
      Interface<(a: string) => string[]>,
      Interface<(a: string) => object>,
      Interface<[] | { a: 1 }>,
      Interface<[30] | { a: 1 }>,
      Interface<object | []>,
      Interface<{ a: 1; b: 2 } | { a: 1; b: 2; c: 2 }>,
      // Error:
      // Interface<stringful>,
      // Interface<numberful>,
      // Interface<string>,
      // Interface<"cool">,
      // Interface<number>,
      // Interface<0>,
      // Interface<1>,
      // Interface<true>,
      // Interface<false>,
      // Interface<boolean>,
      // Interface<null>,
      // Interface<undefined>,
      // Interface<unknown>,
      // Interface<string | { a: cool }>,
      // Interface<Record<"a" | "b" | string, unknown>>,
    ];
  }>;
}
